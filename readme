📬 Mail Labeling Automation with Gmail API + Gemini AI

Automated email categorization using Gmail API and Gemini AI. The system reads unread emails, classifies them using Google Gemini, and moves them to appropriate Gmail labels. New categories discovered by Gemini are saved automatically.

✨ Features

🔐 Secure Gmail API authentication (OAuth2)

🤖 Email classification using Gemini AI (Gemini 1.5 Flash)

🗂 Auto-create and assign Gmail labels

🔄 Dynamic update of regeln.json rules

📝 Logging of new AI categories

🕘 Optional automation 2x daily via Task Scheduler

⚙️ Requirements

Python 3.10+ (recommended)

Google Cloud project

Gmail API enabled

OAuth2 Credentials (Desktop)

Gemini API enabled + API Key

📁 Installation

1. Clone the Repository

git clone https://github.com/yourusername/mail-labeling-ai.git
cd mail-labeling-ai

2. Create & Activate Virtual Environment

python -m venv .venv
.venv\Scripts\activate      # On Windows

3. Install Dependencies

pip install -r requirements.txt

🔐 Setup Google API Access

1. Gmail API (OAuth)

Go to: https://console.cloud.google.com/

Create a new project

Enable Gmail API

Go to Credentials > Create OAuth client ID

Type: Desktop App

Download credentials.json into project root

On first run, the script will generate token.json

2. Gemini API

Visit: https://makersuite.google.com/app/apikey

Copy your API Key

Create .env file or paste into ai_classify.py:

genai.configure(api_key="YOUR_API_KEY")

🚀 Run the Script

python main.py

What it does:

Reads unread Gmail messages
Uses Gemini to classify each email
Moves emails to Gmail labels
Creates new labels and rule entries as needed
Logs category changes to mail_log.txt

🕘 Automate Execution (Windows)

Create a .bat file:

@echo off
cd /d C:\Pfad\zu\mail-labeling-ai
call .venv\Scripts\activate.bat
python main.py

Use Windows Task Scheduler to run this .bat at 09:00 and 20:00 daily.

📦 File Overview

File                        Purpose

main.py                     Main script: reads, classifies, moves emails

ai_classify.py              Gemini classification logic

gmail_utils.py              Gmail API helper functions

regeln.json                 Keyword/category rules (dynamic)

mail_log.txt                Logfile for AI-generated categories

credentials.json            🔐 OAuth2 credentials (NOT uploaded!)

token.json                  🔐 OAuth2 token (auto-generated, NOT uploaded!)

🧑‍💻 Author

Mario Mohar

📄 License

MIT License